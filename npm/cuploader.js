!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";!function(e){class t{constructor(e){this.baseUrl=e.baseUrl,this.username=e.username,this.password=e.password,this.uploadRootFolder=e.uploadRootFolder,this.createTimestampFolder=e.createTimestampFolder||!1,this.debug=e.debug||!1,this.uploadMethod=e.uploadMethod||"stream",this.concurrency=e.concurrency||1,this.showVersionInfo=void 0===e.showVersionInfo||e.showVersionInfo,this.activeUploads=0,this.currentXhr=null,this.isUploading=!1,this.fileProgress={},this.listeners={progress:[],complete:[],error:[]},this.showVersionInfo&&t.printVersionInfo(),this.debug&&this.printConfigInfo()}static debugLog(e,...t){e&&console.log(...t)}printVersion(){this.showVersionInfo&&t.printVersionInfo()}static printVersionInfo(){console.log("%cAlistUploaderJS v0.1.3","\n                color: white;\n                background: linear-gradient(to right, rgb(120,120,220) 20%, rgb(160,200,240) 80%);\n                padding: 6px;\n                border: 3px solid rgb(160,200,240);\n                border-radius: 6px;\n                display: block;\n            "," - GitHub: https://github.com/4444TENSEI/AlistUploaderJS")}printConfigInfo(){const e={"登录用户":this.username,"Alist服务地址":this.baseUrl,"储存根目录":this.uploadRootFolder||"未指定","并发上传数量":this.concurrency||1,"为每次上传生成单独的文件夹":this.createTimestampFolder||!1,"调试模式":this.debug||!1,"输出版本信息":void 0===this.showVersionInfo||this.showVersionInfo,"上传方式":this.uploadMethod||"stream"};console.log("AlistUploaderJS 配置载入: ",e)}on(e,t){this.listeners[e]&&this.listeners[e].push(t)}off(e,t){this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((e=>e!==t)))}trigger(e,...t){this.listeners[e]&&this.listeners[e].forEach((e=>e(...t)))}abortUpload(){this.currentXhr?(this.currentXhr.abort(),this.currentXhr=null,this.isUploading=!1,t.debugLog(this.debug,"取消上传。")):console.log("当前没有正在上传的任务。")}uploadProgressListener(e,t,s,o){if(t.lengthComputable){const i=Date.now(),r=t.loaded,a=t.total,n=r/a*100,l=s.size<1048576?`${(s.size/1024).toFixed(2)} KB`:`${(s.size/1048576).toFixed(2)} MB`;this.fileProgress[s.name]=this.fileProgress[s.name]||{startTime:i,lastLoaded:0,uploadAverageSpeed:0,progress:0,fileSize:l,timer:null};const d=this.fileProgress[s.name],h=(i-d.lastTime)/1e3,p=(r-d.lastLoaded)/(h||1);d.uploadAverageSpeed=.8*d.uploadAverageSpeed+.2*p,d.fileUrl=`${this.baseUrl}/${o}/${encodeURIComponent(s.name)}`,d.uploadStatus="uploading";const u=(a-r)/(d.uploadAverageSpeed||1);let g;g=d.uploadAverageSpeed>=1073741824?`${(d.uploadAverageSpeed/1073741824).toFixed(2)} GB/s`:d.uploadAverageSpeed>=1048576?`${(d.uploadAverageSpeed/1048576).toFixed(2)} MB/s`:d.uploadAverageSpeed>=1024?`${(d.uploadAverageSpeed/1024).toFixed(2)} KB/s`:`${d.uploadAverageSpeed.toFixed(2)} B/s`,d.progress=n,d.progressText=n.toFixed(2)+"%",d.remainingTime=Math.ceil(u),d.timeDiff=Math.ceil((i-d.startTime)/1e3),d.lastLoaded=r,d.lastTime=i,d.uploadSpeed=g,e&&console.log({file:s.name,progress:d.progressText,fileSize:d.fileSize,uploadAverageSpeed:g,remainingTime:`${d.remainingTime} 秒`,timeDiff:`${d.timeDiff} 秒`,uploadStatus:d.uploadStatus,fileUrl:d.fileUrl}),d.timer||(d.timer=setInterval((()=>{const e=Date.now();d.timeDiff=Math.ceil((e-d.startTime)/1e3),console.log({file:s.name,timeDiff:`${d.timeDiff} 秒`,uploadStatus:d.uploadStatus}),this.trigger("progress",this.fileProgress)}),1e3)),this.trigger("progress",this.fileProgress)}}async login(){const e=await fetch(`${this.baseUrl}/api/auth/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({Username:this.username,Password:this.password})}),s=await e.json();if(t.debugLog(this.debug,"登录响应:",s),200!==s.code)throw new Error("登录出错: "+s.message);const o=s.data.token;return await this.getDirectoryInfo(o),o}async getDirectoryInfo(e){const s=await fetch(`${this.baseUrl}/api/fs/list`,{method:"POST",headers:{Authorization:e,"Content-Type":"application/json"},body:JSON.stringify({path:this.uploadRootFolder})}),o=await s.json();if(t.debugLog(this.debug,"获取根目录列表:",o),200!==o.code)throw new Error("获取目录信息出错: "+o.message)}async createFolder(e){let s=this.uploadRootFolder;if(this.createTimestampFolder){const o=(new Date).toISOString().replace(/[-:.TZ]/g,"").substring(0,14);s=`${this.uploadRootFolder}/${o}`;const i=await fetch(`${this.baseUrl}/api/fs/mkdir`,{method:"POST",headers:{Authorization:e,"Content-Type":"application/json"},body:JSON.stringify({path:s})}),r=await i.json();if(t.debugLog(this.debug,"温馨提示: 由于createTimestampFolder开启, 上传前自动创建文件夹:",o),200!==r.code)throw new Error("本次上传自动创建文件夹出错: "+r.message)}return s}async uploadFile(e,t,s){if("form"===this.uploadMethod)return this.formUploadFile(e,t,s);if("stream"===this.uploadMethod)return this.streamUploadFile(e,t,s);throw new Error("未知的上传方式: "+this.uploadMethod)}async uploadFiles(e){if(this.isUploading)return console.warn("上传正在进行中，请稍后再试。"),Promise.resolve();this.isUploading=!0;try{if(0===e.length)return;const s=await this.login(),o=await this.createFolder(s);let i=!0;const r=Array.from(e).map((e=>new Promise((async t=>{for(;this.activeUploads>=this.concurrency;)await new Promise((e=>setTimeout(e,100)));this.activeUploads++;try{const r=await this.uploadFile(s,o,e);i=i&&r.success,t(r)}catch(r){this.trigger("error",r),t({success:!1,file:e.name})}finally{this.activeUploads--}}))));return await Promise.all(r),i?t.debugLog(this.debug,"所有文件上传成功。"):t.debugLog(this.debug,"部分文件上传失败。"),this.trigger("complete",i),o}finally{this.isUploading=!1}}encodePath(e){return e.split("/").map(encodeURIComponent).join("/")}_uploadFile(e,s,o,i,r){return new Promise(((a,n)=>{const l=new XMLHttpRequest;if(this.currentXhr=l,l.open("PUT",i,!0),l.setRequestHeader("Authorization",e),l.setRequestHeader("File-Path",this.encodePath(`${s}/${o.name}`)),l.setRequestHeader("As-Task","true"),l.upload.onprogress=e=>this.uploadProgressListener(this.debug,e,o,s),l.onload=()=>{200===l.status?(t.debugLog(this.debug,`√上传成功: "${encodeURIComponent(o.name)}", 查看${this.baseUrl}/${s}/${encodeURIComponent(o.name)}`),a({success:!0,file:o.name})):(this.trigger("error",new Error(`上传出错: ${l.statusText}`)),a({success:!1,file:o.name})),this.fileProgress[o.name]&&this.fileProgress[o.name].timer&&(clearInterval(this.fileProgress[o.name].timer),this.fileProgress[o.name].timer=null),this.fileProgress[o.name].uploadStatus=200===l.status?"finish":"error",this.fileProgress[o.name].progressInfo={...this.fileProgress[o.name],uploadStatus:this.fileProgress[o.name].uploadStatus},this.debug&&console.log({file:o.name,uploadStatus:this.fileProgress[o.name].uploadStatus,fileUrl:this.fileProgress[o.name].fileUrl}),this.trigger("progress",this.fileProgress)},l.onerror=()=>this.trigger("error",new Error("网络错误或服务器无响应")),l.ontimeout=()=>n(new Error("请求超时")),"form"===r){const e=new FormData;e.append("file",o),l.send(e)}else if("stream"===r){l.setRequestHeader("Content-Type","application/octet-stream");const e=new FileReader;e.onload=e=>{const t=e.target.result;l.send(new Blob([t]))},e.onerror=()=>this.trigger("error",new Error("读取文件出错")),e.readAsArrayBuffer(o)}}))}async formUploadFile(e,t,s){return this._uploadFile(e,t,s,`${this.baseUrl}/api/fs/form`,"form")}async streamUploadFile(e,t,s){return this._uploadFile(e,t,s,`${this.baseUrl}/api/fs/put`,"stream")}}e.AlistUploader=t}(window)}));
